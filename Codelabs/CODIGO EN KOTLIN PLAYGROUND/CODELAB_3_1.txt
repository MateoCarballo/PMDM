// CODELAB 3.1.7

data class Question<T>(
    val questionText: String,
    val answer: T,
    val difficulty: Difficulty
)

enum class Difficulty {
    EASY, MEDIUM, HARD
}

interface ProgressPrintable{
    val progressText: String
    fun printProgressBar()
}

class Quiz: ProgressPrintable {
    val question1 = Question<String>("Quoth the raven ___", "nevermore", Difficulty.MEDIUM)
    val question2 = Question<Boolean>("The sky is green. True or false", false, Difficulty.EASY)
    val question3 = Question<Int>("How many days are there between full moons?", 28, Difficulty.HARD)

    // Esta parte del get y la extension no la comprendo muy bien tenia entendido que aqui no hacen falta getters ni setters 
    
    override val progressText: String
    get() = "You have answered $answered out of $total questions."
    
    override fun printProgressBar(){
        repeat(Quiz.answered) { print("▓") }
        repeat(Quiz.total - Quiz.answered) { print("▒") }
        println()
        println(progressText)
    }
    
    fun printQuiz() {
        question1.let{
            println(it.questionText)
            println(it.answer)
            println(it.difficulty)
        }
        println()
        question2.let{
            println(it.questionText)
            println(it.answer)
            println(it.difficulty)
        }
        println()
        question3.let{
            println(it.questionText)
            println(it.answer)
            println(it.difficulty)
        }
        println()
    }
    
    companion object StudentProgress {
    var total: Int = 10
    var answered: Int = 3
    }
}

fun main() {
    Quiz().apply{
        printQuiz()
    }
    
}